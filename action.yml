name: "Build and Publish to Docker"
description: "Pushes built artifacts to Docker"
author: 'soramitsukhmer'
branding:
  icon: 'anchor'
  color: 'blue'

inputs:
  registry:
    description: 'Server address of Docker registry. If not set then will default to Docker Hub'
    required: false
  username:
    description: 'Username used to log against the Docker registry'
    required: false
  password:
    description: 'Password or personal access token used to log against the Docker registry'
    required: false
  images:
    description: 'List of Docker images to use as base name for tags'
    required: true
  targets:
    description: "List of bake targets"
    required: false
  push:
    description: "Push is a shorthand for --set=*.output=type=registry"
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Login against a Docker registry
    # https://github.com/docker/login-action
    - name: Log into registry ${{ env.REGISTRY }}
      if: inputs.password
      uses: docker/login-action@v1
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ inputs.images }}
        tags: |
          type=ref,event=pr
          type=edge,branch=main
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    # Build and push Docker image with Buildx Bake
    # https://github.com/docker/bake-action
    - name: Build and push Docker image
      if: hashFiles('docker-bake.hcl') != ''
      uses: docker/bake-action@v1
      with:
        files: |
          ./docker-bake.hcl
          ${{ steps.meta.outputs.bake-file }}
        targets: ${{ inputs.targets }}
        push: ${{ inputs.push }}
